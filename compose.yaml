services:
  backend:
    build:
      context: ./backend/laravel
      dockerfile: Dockerfile
    command: >
      bash -c "
      echo 'Waiting for databases...';
      while ! nc -z db 5433; do sleep 1; done;
      while ! nc -z warehouse 5433; do sleep 1; done;
      php artisan migrate --force;
      php artisan storage:link;
      docker-php-entrypoint apache2-foreground
      "
    ports:
      - "8000:80"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5433
      - DB_DATABASE=vehicle_detection
      - DB_USERNAME=user
      - DB_PASSWORD=123
      - WAREHOUSE_DB_HOST=warehouse
      - WAREHOUSE_DB_PORT=5433
      - WAREHOUSE_DB_DATABASE=warehouse_vehicle_count_db
      - WAREHOUSE_DB_USERNAME=user
      - WAREHOUSE_DB_PASSWORD=123
    volumes:
      - ./backend/laravel:/var/www/html
    depends_on:
      db:
        condition: service_healthy
      warehouse:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VUE_APP_API_URL=http://backend
    stdin_open: true
    tty: true
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=vehicle_detection
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=123
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d vehicle_detection"]
      interval: 5s
      timeout: 5s
      retries: 5

  warehouse:
    image: postgres:15-alpine
    ports:
      - "5434:5433"
    environment:
      - POSTGRES_DB=warehouse_vehicle_count_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=123
    volumes:
      - warehouse-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d warehouse_vehicle_count_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  warehouse-data:

networks:
  app-network: